Enable practice codes
C0000000 00000036  # Execute assembly (see game-state-changer.asm)
3D208100 81490002
280A0000 4182019C
3C608053 886359E7
28030005 41820184
3D608053 A18B36E8
A0AB36EA 280C0009
41820170 280C000A
418200D8 280C000B
418200D0 280C000C
41820060 280C0100
4182011C 280C0101
418200C4 280C0200
418200DC 280C0A01
41820138 280C0C00
41820138 280C0C01
41820090 280C1001
41820120 75400002
41820120 280C0401
418200C0 280C0601
418200C0 280C0805
41820014 480000C8
70A000FF 418200C0
48000060 3960000B
3980000C 28050000
41820028 3960000A
3980000A 28050100
41820018 28050401
418200C8 28050601
418200C0 480000C4
3C6080FC 88A39000
28050000 418200B4
2805000C 418200AC
99639000 480000A4
38A00400 48000054
3980000B 70A500FF
48000048 3C6080FC
A0A39039 70A5FF00
28050200 4182007C
38A00200 B0A39039
48000070 75400001
41820060 3860000A
986B492C 4800005C
38A00900 4800000C
38A00600 48000004
B0AB36EA B18B36E8
48000040 B14B36E8
280A0008 4082002C
3800FFFF 3C60805C
60636B4C 38A0007C
7C03292E 34A5FFFC
4080FFF8 3C608051
88630661 986B5B0D
3D400000 91490002
4E800020 00000000
C2049D4C 00000002  # Patch (see retry-stage-reset-refights.asm)
3C808051 98040661
38800900 00000000

Soft reset (L + R + Start + Select)
C0000000 0000000B  # Execute assembly (see soft-reset.asm)
3C608053 886359E7
28030001 41810044
3D208100 89490000
3C608045 A06334EA
28033600 4182000C
714AFFFE 48000020
71400001 4181001C
3CA00003 60A5001A
3C608100 90A30002
614A0001 99490000
4E800020 00000000

Exit TA/challenge (L + R + Start + Select)
C0000000 0000000B  # Execute assembly (see exit-extra-mode-stage.asm)
3C608053 886359E7
28030002 41800044
3D208100 89490000
3C608045 A06334EA
28033600 4182000C
714AFFFD 48000020
71400002 4181001C
3CA00000 60A5000E
3C608100 90A30002
614A0002 99490000
4E800020 00000000

Exit to Stage Select (Select + Y)
C0000000 0000000B  # Execute assembly (see exit-to-stage-select.asm)
3C608053 886359E7
28030001 41810044
3D208100 89490000
3C608045 A06334EA
28031020 4182000C
714AFFFB 48000020
71400004 4181001C
3CA00002 60A50001
3C608100 90A30002
614A0004 99490000
4E800020 00000000

Retry stage (Select + X)
C0000000 00000009  # Execute assembly (see retry-stage.asm)
3D208100 89490000
3C608045 A06334EA
28031008 4182000C
714AFFF7 48000020
71400008 4181001C
3CA00000 60A50007
3C608100 90A30002
614A0008 99490000
4E800020 00000000
C2042114 00000003  # Patch (see fix-whistle-overlap.asm)
3C608001 6063F3CC
7C6903A6 4E800421
3C608051 00000000

Retry checkpoint (Select + A)
C0000000 00000009  # Execute assembly (see retry-checkpoint.asm)
3D208100 89490000
3C608045 A06334EA
28031010 4182000C
714AFFEF 48000020
71400010 4181001C
3CA00000 60A50008
3C608100 90A30002
614A0010 99490000
4E800020 00000000
C2042114 00000003  # Patch (see fix-whistle-overlap.asm)
3C608001 6063F3CC
7C6903A6 4E800421
3C608051 00000000

Sliding Mega Man
00071DC7 0000007F  # Patch character bit mask in function checking if slide pressed
00071E8A 0000007F  # Patch character bit mask in function preventing jump out of slide

Easy TA
C2049890 00000001  # Patch (see easy-ta.asm)
38C00000 00000000

Hard TA
C2049890 00000001  # Patch (see hard-ta.asm)
38C00003 00000000

Proto Man TA
C2049988 00000001  # Patch (see proto-man-ta.asm)
38800002 00000000

Bass TA
C2049988 00000001  # Patch (see bass-ta.asm)
38800003 00000000

Time Attack weapons
02535A7E 000007FF  # weapons = MB, TB, WS, CB, CS, TW, WC, SB, RC, RJ
285102EE 00000002  # if music == Pump Man:
02535A7E 00000201  #   weapons = MB, RC
285102EF 00000008  # else if music == Solar Man:
02535A7E 00000205  #   weapons = MB, WS, RC
285102EF 00000003  # else if music == Chill Man:
02535A7E 00000305  #   weapons = MB, WS, SB, RC
285102EF 00000007  # else if music == Nitro Man:
02535A7E 00000315  #   weapons = MB, WS, CS, SB, RC
285102EF 00000004  # else if music == Commando Man:
02535A7E 00000795  #   weapons = MB, WS, CS, WC, SB, RC, RJ
285102EF 00000001  # else if music == Blade Man:
02535A7E 0000079D  #   weapons = MB, WS, CB, CS, WC, SB, RC, RJ
285102EF 00000006  # else if music == Strike Man:
02535A7E 0000079F  #   weapons = MB, TB, WS, CB, CS, WC, SB, RC, RJ
285102EF 00000005  # else if music == Sheep Man:
02535A7E 000007DF  #   weapons = MB, TB, WS, CB, CS, TW, WC, SB, RC, RJ
E2000001 00000000  # endif

Time Attack Wily 4 tanks
205C5728 00000001  # if Time Attack time == 1:
285102EE 0000000C  #   if music == Wily 4:
0051066A 00000001  #     M-tank count = 1
0051066B 00000001  #     W-tank count = 1
E2000002 00000000  # endif x2

Lock RNG
0467CB54 00000000  # rng = 0

Remove Special Stage times
005A0998 000000FD  # Set Climber challenge incomplete and next 7 challenges complete
045A0AE0 00008CA1  # Unset Special Stage 1 time
045A0AE4 00008CA1  # Unset Special Stage 2 time
045A0AE8 00008CA1  # Unset Special Stage 3 time

Bind Weapon Swap L to X
C0000000 0000000A  # Execute assembly (see bindings.asm: bind Weapon Swap L to X)
3CA0802E A005777E
A065776A 3CE08053
A0E736E8 2C07000A
4182001C 2C07000C
41820014 60002000
7000FFF7 60630008
48000010 7000DFFF
60000008 7063FFF7
B005777E B065776A
4E800020 00000000

Bind Weapon Swap L to A
C0000000 0000000A  # Execute assembly (see bindings.asm: bind Weapon Swap L to A)
3CA0802E A005777E
A0657766 3CE08053
A0E736E8 2C07000A
4182001C 2C07000C
41820014 60002000
7000FFEF 60630010
48000010 7000DFFF
60000010 7063FFEF
B005777E B0657766
4E800020 00000000

Bind Weapon Swap L to ZL
C0000000 00000008  # Execute assembly (see bindings.asm: bind Weapon Swap L to ZL)
3CA0802E A005777E
3CE08053 A0E736E8
2C07000A 41820018
2C07000C 41820010
60002000 7000FF7F
4800000C 7000DFFF
60000080 B005777E
4E800020 00000000

Bind Weapon Swap R to X
C0000000 0000000A  # Execute assembly (see bindings.asm: bind Weapon Swap R to X)
3CA0802E A005777A
A065776A 3CE08053
A0E736E8 2C07000A
4182001C 2C07000C
41820014 60000200
7000FFF7 60630008
48000010 7000FDFF
60000008 7063FFF7
B005777A B065776A
4E800020 00000000

Bind Weapon Swap R to A
C0000000 0000000A  # Execute assembly (see bindings.asm: bind Weapon Swap R to A)
3CA0802E A005777A
A0657766 3CE08053
A0E736E8 2C07000A
4182001C 2C07000C
41820014 60000200
7000FFEF 60630010
48000010 7000FDFF
60000010 7063FFEF
B005777A B0657766
4E800020 00000000

Bind Weapon Swap R to ZR
C0000000 00000008  # Execute assembly (see bindings.asm: bind Weapon Swap R to ZR)
3CA0802E A005777A
3CE08053 A0E736E8
2C07000A 41820018
2C07000C 41820010
60000200 7000FFFB
4800000C 7000FDFF
60000004 B005777A
4E800020 00000000

Bind Dash to L
C0000000 00000007  # Execute assembly (see bindings.asm: unbind Weapon Swap L)
3CA0802E A005777E
3CE08053 A0E736E8
2C07000A 41820014
2C07000C 4182000C
60002000 48000008
7000DFFF B005777E
4E800020 00000000
C20765E0 00000009  # Patch (see dash-button.asm: injection #1)
3CA08045 A00534EA
3CA08100 89050001
7108FFFD 70002000
4182001C 70808000
40820014 71000004
40820010 61080006
48000008 7108FFFB
99050001 54E0043E
60000000 00000000
C2072248 00000004  # Patch (see dash-button.asm: injection #2)
3C808100 88040001
70000002 4182000C
38600001 4E800020
A0030194 00000000

Bind Dash to R
C0000000 00000007  # Execute assembly (see bindings.asm: unbind Weapon Swap R)
3CA0802E A005777A
3CE08053 A0E736E8
2C07000A 41820014
2C07000C 4182000C
60000200 48000008
7000FDFF B005777A
4E800020 00000000
C20765E0 00000009  # Patch (see dash-button.asm: injection #1)
3CA08045 A00534EA
3CA08100 89050001
7108FFFD 70000200
4182001C 70808000
40820014 71000004
40820010 61080006
48000008 7108FFFB
99050001 54E0043E
60000000 00000000
C2072248 00000004  # Patch (see dash-button.asm: injection #2)
3C808100 88040001
70000002 4182000C
38600001 4E800020
A0030194 00000000

Bind Dash to ZL
C20765E0 00000009  # Patch (see dash-button.asm: injection #1)
3CA08045 A00534EA
3CA08100 89050001
7108FFFD 70000080
4182001C 70808000
40820014 71000004
40820010 61080006
48000008 7108FFFB
99050001 54E0043E
60000000 00000000
C2072248 00000004  # Patch (see dash-button.asm: injection #2)
3C808100 88040001
70000002 4182000C
38600001 4E800020
A0030194 00000000

Bind Dash to ZR
C20765E0 00000009  # Patch (see dash-button.asm: injection #1)
3CA08045 A00534EA
3CA08100 89050001
7108FFFD 70000004
4182001C 70808000
40820014 71000004
40820010 61080006
48000008 7108FFFB
99050001 54E0043E
60000000 00000000
C2072248 00000004  # Patch (see dash-button.asm: injection #2)
3C808100 88040001
70000002 4182000C
38600001 4E800020
A0030194 00000000
